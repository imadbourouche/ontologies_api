x-app: &app
    image: agroportal/ontologies_api:development
    environment: &env
      BUNDLE_PATH: /srv/ontoportal/bundle
      # default bundle config resolves to /usr/local/bundle/config inside of the container
      # we are setting it to local app directory if we need to use 'bundle config local'
      BUNDLE_APP_CONFIG: /srv/ontoportal/ontologies_api/.bundle
      COVERAGE: 'true'
      GOO_REDIS_HOST: redis-ut
      REDIS_HOST: redis-ut
      REDIS_PORT: 6379
      SOLR_HOST: solr-ut
      SOLR_TERM_SEARCH_URL: http://solr-ut:8983/solr/term_search_core1
      SOLR_PROP_SEARCH_URL: http://solr-ut:8983/solr/prop_search_core1
      MGREP_HOST: mgrep-ut
      MGREP_PORT: 55555
    stdin_open: true
    tty: true
    command: "bundle exec rackup -o 0.0.0.0 --port 9393"
    ports:
      - 9393:9393
    volumes:
      # bundle volume for hosting gems installed by bundle; it helps in local development with gem udpates
      - bundle:/srv/ontoportal/bundle
      # api code
      - .:/srv/ontoportal/ontologies_api
      # mount directory containing development version of the gems if you need to use 'bundle config local'
      #- /Users/alexskr/ontoportal:/Users/alexskr/ontoportal
    depends_on:
      - solr-ut
      - redis-ut
      - mgrep-ut

services:
  api:
    <<: *app
    env_file:
      .env
    environment:
      <<: *env
      GOO_BACKEND_NAME: 4store
      GOO_PORT: 9000
      GOO_HOST: 4store-ut
      GOO_PATH_QUERY: /sparql/
      GOO_PATH_DATA: /data/
      GOO_PATH_UPDATE: /update/
    profiles:
      - 4store
    depends_on:
      - solr-ut
      - redis-ut
      - mgrep-ut
      - 4store-ut

  api-agraph:
    <<: *app
    environment:
      <<: *env
      GOO_BACKEND_NAME: ag
      GOO_PORT: 10035
      GOO_HOST: agraph-ut
      GOO_PATH_QUERY: /repositories/bioportal_test
      GOO_PATH_DATA: /repositories/bioportal_test/statements
      GOO_PATH_UPDATE: /repositories/bioportal_test/statements
    profiles:
      - agraph
    depends_on:
      - solr-ut
      - redis-ut
      - mgrep-ut
      - agraph-ut

  redis-ut:
    image: redis
    ports:
      - 6379:6379

  4store-ut:
    image: bde2020/4store
    #volume: fourstore:/var/lib/4store
    ports:
      - 9000:9000
    command: >
      bash -c "4s-backend-setup --segments 4 ontoportal_kb
      && 4s-backend ontoportal_kb
      && 4s-httpd -D -s-1 -p 9000 ontoportal_kb"
    profiles:
      - 4store


  solr-ut:
    image: solr:8
    volumes:
      - ./test/solr/configsets:/configsets:ro
    ports:
      - "8983:8983"
    command: >
      bash -c "precreate-core term_search_core1 /configsets/term_search
      && precreate-core prop_search_core1 /configsets/property_search
      && solr-foreground"

  mgrep-ut:
    image: ontoportal/mgrep-ncbo:0.1
    ports:
      - "55556:55555"

  agraph-ut:
    image: franzinc/agraph:v7.3.0
    environment:
      - AGRAPH_SUPER_USER=test
      - AGRAPH_SUPER_PASSWORD=xyzzy
    shm_size: 1g
    # ports:
    #  - 10035:10035
    command: >
       bash -c "/agraph/bin/agraph-control --config /agraph/etc/agraph.cfg start
       ; agtool repos create bioportal_test
       ; agtool users add anonymous
       ; agtool users grant anonymous root:bioportal_test:rw
       ; tail -f /agraph/data/agraph.log"
    profiles:
      - agraph

volumes:
  bundle:
  #fourstore:
